html {
    box-sizing: border-box;
    font-size: 16px;
    font-family: sans-serif;
    scroll-behavior: smooth;
    background-color: #DDD;
  }

  *,
  *::after,
  *::before {
    box-sizing: inherit;
  }

  a[href="#top"] {
    margin: 1rem;
    display: block;
    font-size: 2rem;
    text-align: center;
    text-decoration: none;
  }

  p {
    margin: 0;
  }

  h2 {
    margin-top: 50vh;
    text-align: center;
  }

  img {
    margin: auto;
    display: block;
    max-width: 100%;
    height: auto;
  }

  .menu {
    margin-bottom: 100vh;
    font-size: 125%;
  }

  .menu li {
    margin-bottom: 1rem;
  }

  .container {
    margin: 0 auto;
    width: 80%;
    height: 80vh;
    background-color: #222;
    border: medium solid #000;
  }

  .item {
    padding: 1rem;
    font-size: 1.25rem;
    background-color: #666;
    border: medium solid #999;
  }

  .sub-item{
    padding: 1rem;
    border: medium solid #ccc;
    background-color: #DDD;
  }

  .grid-explicit{
    display: grid;
    grid-template-columns: 50% 100px 1fr;
    grid-template-rows: 2rem 20vh 30%;

    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(4, 1fr);

    grid-template-columns: 20% repeat(2, 30%) 20%;
    grid-template-rows: repeat(5, auto);

    grid-template-columns: repeat(5, 20%);
    grid-template-rows: repeat(4, 25%);
    
    /*grid-row-gap: ;
    grid-column-gap: ;
    grid-gap: ;*/
    gap: 1vh 0vw;
    gap: 0;
  }



  /* Grid Explicit */
  .grid-explicit .item:nth-child(10){
    grid-row-start: 2;
    grid-row-end: 3;
    grid-column-start: 2;
    grid-column-end: 3;
    background-color: bisque;

    grid-row: 2/3;
    grid-column: 3/5;
    /*         grid-row / grid colum */
    grid-area: 2/3 / 3/5;
  }

  .grid-explicit .item:nth-child(12){
    color: cyan;
    grid-row: span 2;
    grid-column: span 3;
  }

  .grid-explicit .item:nth-child(15){
    color: cyan;
    grid-row: 1 / span 2;
    grid-column: 1 / span 2;
  }



  /* Posicionamiento con nombres de Grid Lines */
  .grid-line-names{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);

    grid-template-columns: [linea-c1] 1fr [linea-c2] 1fr [linea-c3] 1fr [linea-c4];
    grid-template-rows: [linea-r1] 1fr [linea-r2] 1fr [linea-r3] 1fr [linea-r4];
  }

  .grid-line-names .item:nth-child(3){
    color: cyan;
    grid-row: linea-r3 / linea-r4;
    grid-column: linea-c1 / linea-c4;
  }

  .grid-areas{
    display: grid;
    grid-template-columns: 1fr 200px;
    grid-template-rows: 100px repeat(2, 1fr) 60px;

    grid-template-areas: 
     "header header"
     "content sidebar"
     "content ."
     "footer footer";
  }

  .header{
    grid-area: header;
  }

  .content{
    grid-area: content;
  }

  .sidebar{
    grid-area: sidebar;
  }

  .footer{
    grid-area: footer;
  }


  /*Grid Implícita. Grids de bloque y de línea*/
  .grid-implicit{
    width: 40%;
    display: grid;
    display: inline-grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(3, 200px);
  }


  /* Grid flow*/
  .grid-flow{
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(3, 120px);
    /*grid-auto-rows: 100px*/
    grid-auto-flow: column; /*or row*/
    grid-auto-columns: 50px;
  }



  /* Grid flow dense */
  .grid-flow-dense{
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(4, 140px);
    grid-auto-flow: row dense;
    grid-auto-flow: column dense;
  }

  /*.grid-flow-dense .item:nth-child(9){
    color: cyan;
    grid-row: span 3;
    grid-column: span 3;
  }*/

  .grid-flow-dense .item:nth-child(11){
    color: cyan;
    grid-row: span 3;
    grid-column: span 3;
  }


  /* Grid Layers: Celdas en capas (superposición) */
  .grid-layers{
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
  }

  .grid-layers .item:nth-child(1){
    background-color: crimson;
    grid-column: 1 / 3;
    grid-row: 1 / 3;
  }
  
  .grid-layers .item:nth-child(2){
    background-color: cyan;
    grid-column: 3 / 5;
    grid-row: 1 / 3;
  }
  

  .grid-layers .item:nth-child(3){
    background-color: chartreuse;
    grid-column: 1 / 3;
    grid-row: 3 / 5;
  }

  .grid-layers .item:nth-child(4){
    background-color: yellow;
    grid-column: 3 / 5;
    grid-row: 3 / 5;
  }

  .grid-layers .item:nth-child(5){
    background-color: palevioletred;
    opacity: .75;
    grid-column: 2 / 4;
    grid-row: 2 / 4;
  }



  /* Orden y Alineación de Grid Items */
  .grid-order{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);
    grid-auto-flow: column;
  }

  .grid-order .item:nth-child(1){
    order: 1;
  }

  .grid-order .item:nth-child(2){
    order: 2;
  }

  .grid-order .item:nth-child(5){
    order: -1;
  }


  /* Alineación */
  .grid-align{
    display: grid;
    grid-template-columns: repeat(3, 200px);
    grid-template-rows: repeat(2, 200px);
    /* Respecto de X */
    justify-items: stretch;
    justify-items: start;
    justify-items: end;
    justify-items: center;

    /* Respecto de Y */
    align-items: stretch;
    align-items: start;
    align-items: end;
    align-items: center;
  }

  .grid-align .item:nth-child(4){
    justify-self: start;
    align-self: start;
  }



  /* Alineación de Grid Tracks */

  .grid-align-tracks{
    display: grid;
    grid-template-columns: repeat(3, 200px);
    grid-template-rows: repeat(2, 200px);

    /* Alineación los track en el eje X */
    justify-content: end;
    justify-content: center;
    justify-content: space-evenly;

    /* Alineación de tracks en el ejec Y */
    align-content: end;
    align-content: center;
    align-content: space-evenly;
  }



  /* Grid min max */

  .grid-min-max{
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-columns: repeat(4, minmax(100px, 200px));
    grid-template-columns: repeat(4, minmax(min-content, 200px));
    grid-template-columns: repeat(4, minmax(100px, min-content));
    grid-template-columns: repeat(4, minmax(100px, max-content));
    grid-template-columns: repeat(4, minmax(max-content, 200px));
    grid-template-columns: repeat(4, minmax(min-content, max-content));
  }



  /* Grids con Patrones Repetitivos */

  .grid-repeat{
    display: grid;
    grid-template-columns: repeat(1, 10% 20% 30% 40%);

    grid-template-rows: repeat(2, 10vh 20vh);
    
    grid-auto-rows: 150px;
  }



  /* Grids Dinámicas. */

  .grid-dynamics{
    display: grid;
    /* auto-fill: rellena la grid con track generados dinámicamente. */
    grid-template-columns: repeat(auto-fill, 100px);

    /*auto-fit: Ajusta la grid con tracks generados existentes. */
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));

    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
  }

  /* Responsive sin Media Queries. */

  .grid-responsive{
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1vh;
  }



  /* Grids Anidadas & Subgrids */
  .grid-nested{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
  }

  /*TODO: Solo funciona en Mozila, aún no soportado por navegadores; revisar en "Can I use"*/
  /* Subgrids */
  
  .grid{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(4, 1fr);
  }

  /* Para que la característica de subgrid funcione es necesario hacer lo siguiente: 
    
    1) Definir explicítamente el tamaño que ocupará el elemento que aplicará subgrid dentro del contenedor padre grid, es decir, definir sus propiedades grid-column y grid-row.

    2) Aplicar display:grid al elemento que aplicará subgrid.

    3) Aplicar el valor 

  */
  .subgrid{
    grid-column: span 3;
    grid-row: 1 / 3;
    display: grid;
    grid-template-columns: subgrid;
    grid-template-rows: subgrid;
  }